body {
    margin: 0;
    font-family: 'Outfit', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

body, div {
    box-sizing: border-box;
}

nav, header, footer, aside, main {
    padding: 20px;
    border: 2px solid rgb(223, 94, 94);
}

.grid {
    display: grid;
    grid-template-columns: minmax(200px, 1fr) minmax(300px, 3fr) minmax(200px, 1fr); /* NOTE El valor auto-fit nos permite ajustar el número de columnas al tamaño del contenedor, tambien existe el auto-fill que ajusta el tamaño de las columnas al tamaño del contenido pero no al contenedor */
    grid-template-rows: auto 1fr auto; /* NOTE El valor auto nos permite ajustar el tamaño de las filas al tamaño del contenido */
    grid-auto-flow: row dense; /* NOTE El valor dense nos permite rellenar los espacios vacíos con los elementos que se encuentren en la cola, pero no respeta el orden para solucionar el problema */
    margin: auto;
    padding: 10px;
    gap: 20px; /* NOTE La propiedad gap nos permite definir el espacio entre las filas y columnas */
    min-height: 100vh;
    grid-template-areas: 
        "header header header"
        "nav main aside"
        "footer footer footer"; /* NOTE La propiedad grid-template-areas nos permite definir un área para cada elemento del grid */
}

header {
    grid-area: header;  /* NOTE La propiedad grid-area nos permite asignar un área a un elemento del grid definido en grid-template-areas */
}

nav {
    grid-area: nav;
}

main {
    grid-area: main;
    max-width: 700px;
}

aside {
    grid-area: aside;
}

footer {
    grid-area: footer;
}

.grid-item {
    background-color: rgb(255, 255, 255);
    color: rgb(223, 94, 94);
    font-size: 30px;
    background-image: url(../../asus\ original.jpg);
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
}

.grid-item:nth-child(10) {
    grid-area: span 1 / span 3;
}


.grid-item:hover {
    opacity: 0.5;
}